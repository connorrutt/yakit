name: Yakit-CI

on:
  push:
    branches:
      - "luoluo/feature/https-history"

jobs:
  build_yakit:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.10.0
      - run: echo ${{ github.ref }}
      - uses: mad9000/actions-find-and-replace-string@1
        id: fetchtag_yakit
        with:
          source: ${{ github.ref }}
          find: 'refs/tags/v'
          replace: ''
      - name: Extract Version 
        id: extract_version
        uses: Saionaro/extract-package-version@v1.1.1
      - name: Echo Yakit Package Version
        run: echo ${{ steps.extract_version.outputs.version }}
      - run: yarn install && yarn install-render
        working-directory: ./
        name: "Install Dependencies"
        env:
          CI: ""
          NODE_OPTIONS: --max_old_space_size=4096
      - run: yarn build-render
        working-directory: ./
        name: "Build Community"
        env:
          CI: ""
          NODE_OPTIONS: --max_old_space_size=4096
      - name: Build Yakit (MultiPlatform)
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        working-directory: ./
        run: yarn pack-mac
      - name: View Published Content
        run: ls ./release
      - name: Upload Yakit Artifacts Mac(m1)
        uses: actions/upload-artifact@v2
        with:
          name: Yakit-${{ steps.extract_version.outputs.version }}-darwin-arm64.dmg
          path: ./release/Yakit-${{ steps.extract_version.outputs.version }}-darwin-arm64.dmg
      - name: Upload Yakit Artifacts Mac(intel)
        uses: actions/upload-artifact@v2
        with:
          name: Yakit-${{ steps.extract_version.outputs.version }}-darwin-x64.dmg
          path: ./release/Yakit-${{ steps.extract_version.outputs.version }}-darwin-x64.dmg
download_artifacts_and_release:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs:
      #      - build_and_release
      - build_yakit
    runs-on: ubuntu-latest
    steps:
      - name: Set Yak Version by Tag
        uses: mad9000/actions-find-and-replace-string@1
        id: fetchtag_release
        with:
          source: ${{ github.ref }}
          find: 'refs/tags/v'
          replace: ''
      - name: Download Yakit (Darwin Amd64)
        uses: actions/download-artifact@v2
        with:
          name: Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-x64.dmg
      - name: Download Yakit (Darwin arm64)
        uses: actions/download-artifact@v2
        with:
          name: Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-arm64.dmg

      - run: ls
        name: Ls Published Artifacts...

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # 上传 release asset
      - name: Upload Release Asset (MacOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-x64.dmg
          asset_name: Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-x64.dmg
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (MacOS-M1)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-arm64.dmg
          asset_name: Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-arm64.dmg
          asset_content_type: application/octet-stream

      - name: Run
        run: ls
      - name: Update OSS latest file
        run: echo ${{ steps.fetchtag_release.outputs.value }} > ./yakit-version.txt
      - name: Upload Yakit to oss(windows)
        uses: tvrcgo/upload-to-oss@master
        with:
          key-id: ${{ secrets.OSS_KEY_ID }}
          key-secret: ${{ secrets.OSS_KEY_SECRET }}
          region: oss-accelerate
          bucket: yaklang
          assets: |
            ./yakit-version.txt:/yak/latest/yakit-version.txt
            Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-x64.dmg:/yak/${{ steps.fetchtag_release.outputs.value }}/Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-x64.dmg
            Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-arm64.dmg:/yak/${{ steps.fetchtag_release.outputs.value }}/Yakit-${{ steps.fetchtag_release.outputs.value }}-darwin-arm64.dmg